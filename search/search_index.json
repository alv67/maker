{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sample One more, finally. Or not? :) Now: $ some Look what she said: This is it! Subtitle And now this: One Two Three As well As this Another a link More? Can we now have the build ? NOW! Not gonna work, is it?","title":"Home"},{"location":"#sample","text":"One more, finally. Or not? :) Now: $ some Look what she said: This is it!","title":"Sample"},{"location":"#subtitle","text":"And now this: One Two Three","title":"Subtitle"},{"location":"#as-well","text":"","title":"As well"},{"location":"#as-this","text":"","title":"As this"},{"location":"#another","text":"a link More? Can we now have the build ? NOW! Not gonna work, is it?","title":"Another"},{"location":"RaspberryPI/","text":"INSTALLAZIONE RASPBERRY PI last edited on 2021-06-24 Scaricare Raspberry Pi Imager dal sito ufficiale Raspberry PI Utilizzando l'applicativo scaricato, selezionare l'immagine del sistema operativo che si vuole installare: nel dubbio scegliere \"Raspberry PI OS\" NOTA : in caso si intenda utilizzare in modo HEADLESS (senza monitor e tastiera) e preconfigurare il WiFi, vedere il capitolo dedicato prima di procedere con la creazione dell'immagine. Iserire la SD-CARD sul computer e selezionarla dall'applicativo e avviare la scrittura Inserire l'SD-CARD nel Raspberry PI, accendere ed aspettare fino a completo avvio A questo punto \u00e8 possibile collegare un monitor e una tastiera per poter utilizzare il sistema operativo. PREDISPOSIZIONE ALL'USO HEADLESS Nel caso non si voglia, o non si possa, utilizzare tastiera, mouse e monitor, \u00e8 possibile effettuare una configurazione della connessione Wi-Fi seguendo una delle procedure seguenti. Metodo automatico tramite applicazione Raspberry PI Imager Il nuovo applicativo Raspberry PI Imager ha una funzionalit\u00e0 (seppur celata) che permette di: preconfigurare il Wi-Fi, prelevando automaticamente la configurazione dal sistema operativo abilitare la connessione SSH con login tramite utente pi e password che si pu\u00f2 impostare preventivamente utente e chiave ssh configurabile gi\u00e0 in questa fase e che viene importata direttamente da quella di default impostare fuso orario e layout tastiera impostare il nome host Il tutto \u00e8 configurabile premendo CTRL-SHIFT-X prima di effettuare la scrittura dell'immagine su SD-CARD Predisposizione manuale di Wi-Fi e SSH (es per Raspberry PI ZERO) Nel caso non si voglia, o non si possa, utilizzare tastiera, mouse e monitor, \u00e8 possibile effettuare una configurazione della connessione Wi-Fi seguendo la procedura seguente. inserire la SD-CARD appena configurata nel proprio computer. La formattazione prevede la presenza di una partizione boot formattata in FAT32 e leggibile e scrivibile anche da computer con sistema operativo Windows o macOS occorre creare un file di configurazione che sar\u00e0 poi installato nella cartella /etc/wpa_supplicant del SO Raspberry. Il file da creare deve chiamarsi wpa_supplicant.conf con il seguente contenuto: ```sh ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 country=IT network={ ssid=\"YOURSSID\" psk=\"YOURPASSWORD\" scan_ssid=1 } ``` NOTA : sostituire ssid e psk con le credenziali della propria rete WiFi ATTENZIONE : non lasciare spazi attorno al simbolo = in questo file, il sistema non lo ammette... copiare il file all'interno della partizione boot nell'SD-CARD. Alla prima accensione questo file sar\u00e0 automaticamente spostato nella cartella dedicata ed utilizzato dal sistema operativo. Purtroppo di default il sistema Raspbian non attiva il protocollo SSH, ma esiste un modo veloce per farlo: occorre creare un file nominato SSH (senza estensione) nella partizione boot della SDCARD. HEADLESS LOGIN : Collegarsi al Raspberry senza utilizzo di Tastiera e Monitor E' possibile accedere alla console del sistema Raspberry da remoto senza l'uso della tastiera collegata. Sar\u00e0 necessario collegare la Ethernet del Raspberry alla propria rete locale, dotata di DHCP. Tramite protocollo ssh si potra connettersi al dispositivo. Seguire i seguenti passi: Scoprire quale indirizzo IP \u00e8 stato fornito al Raspberry. Per fare questo occorre o utilizzare un qualsiasi tool di IP Scanner di rete oppure verificare il dato dal proprio Router. NOTA : di default la scheda si presenta in rete con hostname raspberrypi quindi potrebbe non essere necessario cercare l'IP e provare a raggiungere la scheda all'indirizzo raspberry.local (da MacOS o Linux) 3. Utilizzando un terminale SSH \u00e8 ora possibile accedere alla console del Raspberry user: pi password: raspberry sh ssh {indirizzo IP | hostname} 4. Ora \u00e8 possibile accedere al men\u00f9 di configurazione da terminale di Raspbian: sh sudo raspi-config Istallazione di Node.js su Raspberry PI Zero (armv6l) Purtroppo i build ufficiali delle ultime versioni di Node.js non sono compilati per la piattaforma hardware ARM v6 utilizzata su Raspberry PI zero. Per verificare la piattaforma usare il comando: uname -m scaricare il Node.js compilato per la piattaforma dai Unofficial builds del sito ufficiale di Node.js. Ad esempio il compilato della versione nodejs.14.17.1 per armv6 si trova qui Quindi scaricare il binario tramite il seguente comando sh wget https://unofficial-builds.nodejs.org/download/release/v14.17.1/node-v14.17.1-linux-armv6l.tar.xz 2. scompattare l'archivio binario appena scaricato all'interno della cartella nella quale si intende installare Node.js, ad esempio in /usr/local/lib/nodejs ```sh sudo mkdir -p /usr/local/lib/nodejs sudo tar -xJvf node-v14.17.1-linux-armv6l.tar.xz -C /usr/local/lib/nodejs ``` aggiungere il percorso alla variabile d'ambiente PATH. Editale il file ~/.profile ed aggiungere: alternativamente \u00e8 possibile utilizzare il metodo spiegato al punto successivo sh export PATH=/usr/local/lib/nodejs/node-v14.17.1.linux-armv6l/bin:$PATH riavvia il profilo sh . ~/.profile creare i link simbolici metodo alternativo rispetto al punto precedente NOTA : alternativamente al questo metodo \u00e8 possibile creare dei link simbolici agli applicativi node, npm e npx direttamente all'interno di /usr/bin. In questo modo tutti gli utenti possono avere accesso a Node.js ```sh sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/node /usr/bin/node sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/npm /usr/bin/npm sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/npx /usr/bin/npx ``` test del corretto funzionamento di node, npm e npx ```sh node -v npm version npx -v ``` Per ora \u00e8 tutto alv67","title":"INSTALLAZIONE RASPBERRY PI"},{"location":"RaspberryPI/#installazione-raspberry-pi","text":"last edited on 2021-06-24 Scaricare Raspberry Pi Imager dal sito ufficiale Raspberry PI Utilizzando l'applicativo scaricato, selezionare l'immagine del sistema operativo che si vuole installare: nel dubbio scegliere \"Raspberry PI OS\" NOTA : in caso si intenda utilizzare in modo HEADLESS (senza monitor e tastiera) e preconfigurare il WiFi, vedere il capitolo dedicato prima di procedere con la creazione dell'immagine. Iserire la SD-CARD sul computer e selezionarla dall'applicativo e avviare la scrittura Inserire l'SD-CARD nel Raspberry PI, accendere ed aspettare fino a completo avvio A questo punto \u00e8 possibile collegare un monitor e una tastiera per poter utilizzare il sistema operativo.","title":"INSTALLAZIONE RASPBERRY PI"},{"location":"RaspberryPI/#predisposizione-alluso-headless","text":"Nel caso non si voglia, o non si possa, utilizzare tastiera, mouse e monitor, \u00e8 possibile effettuare una configurazione della connessione Wi-Fi seguendo una delle procedure seguenti.","title":"PREDISPOSIZIONE ALL'USO HEADLESS"},{"location":"RaspberryPI/#metodo-automatico-tramite-applicazione-raspberry-pi-imager","text":"Il nuovo applicativo Raspberry PI Imager ha una funzionalit\u00e0 (seppur celata) che permette di: preconfigurare il Wi-Fi, prelevando automaticamente la configurazione dal sistema operativo abilitare la connessione SSH con login tramite utente pi e password che si pu\u00f2 impostare preventivamente utente e chiave ssh configurabile gi\u00e0 in questa fase e che viene importata direttamente da quella di default impostare fuso orario e layout tastiera impostare il nome host Il tutto \u00e8 configurabile premendo CTRL-SHIFT-X prima di effettuare la scrittura dell'immagine su SD-CARD","title":"Metodo automatico tramite applicazione Raspberry PI Imager"},{"location":"RaspberryPI/#predisposizione-manuale-di-wi-fi-e-ssh-es-per-raspberry-pi-zero","text":"Nel caso non si voglia, o non si possa, utilizzare tastiera, mouse e monitor, \u00e8 possibile effettuare una configurazione della connessione Wi-Fi seguendo la procedura seguente. inserire la SD-CARD appena configurata nel proprio computer. La formattazione prevede la presenza di una partizione boot formattata in FAT32 e leggibile e scrivibile anche da computer con sistema operativo Windows o macOS occorre creare un file di configurazione che sar\u00e0 poi installato nella cartella /etc/wpa_supplicant del SO Raspberry. Il file da creare deve chiamarsi wpa_supplicant.conf con il seguente contenuto: ```sh ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 country=IT network={ ssid=\"YOURSSID\" psk=\"YOURPASSWORD\" scan_ssid=1 } ``` NOTA : sostituire ssid e psk con le credenziali della propria rete WiFi ATTENZIONE : non lasciare spazi attorno al simbolo = in questo file, il sistema non lo ammette... copiare il file all'interno della partizione boot nell'SD-CARD. Alla prima accensione questo file sar\u00e0 automaticamente spostato nella cartella dedicata ed utilizzato dal sistema operativo. Purtroppo di default il sistema Raspbian non attiva il protocollo SSH, ma esiste un modo veloce per farlo: occorre creare un file nominato SSH (senza estensione) nella partizione boot della SDCARD.","title":"Predisposizione manuale di Wi-Fi e SSH (es per Raspberry PI ZERO)"},{"location":"RaspberryPI/#headless-login-collegarsi-al-raspberry-senza-utilizzo-di-tastiera-e-monitor","text":"E' possibile accedere alla console del sistema Raspberry da remoto senza l'uso della tastiera collegata. Sar\u00e0 necessario collegare la Ethernet del Raspberry alla propria rete locale, dotata di DHCP. Tramite protocollo ssh si potra connettersi al dispositivo. Seguire i seguenti passi: Scoprire quale indirizzo IP \u00e8 stato fornito al Raspberry. Per fare questo occorre o utilizzare un qualsiasi tool di IP Scanner di rete oppure verificare il dato dal proprio Router. NOTA : di default la scheda si presenta in rete con hostname raspberrypi quindi potrebbe non essere necessario cercare l'IP e provare a raggiungere la scheda all'indirizzo raspberry.local (da MacOS o Linux) 3. Utilizzando un terminale SSH \u00e8 ora possibile accedere alla console del Raspberry user: pi password: raspberry sh ssh {indirizzo IP | hostname} 4. Ora \u00e8 possibile accedere al men\u00f9 di configurazione da terminale di Raspbian: sh sudo raspi-config","title":"HEADLESS LOGIN : Collegarsi al Raspberry senza utilizzo di Tastiera e Monitor"},{"location":"RaspberryPI/#istallazione-di-nodejs-su-raspberry-pi-zero-armv6l","text":"Purtroppo i build ufficiali delle ultime versioni di Node.js non sono compilati per la piattaforma hardware ARM v6 utilizzata su Raspberry PI zero. Per verificare la piattaforma usare il comando: uname -m scaricare il Node.js compilato per la piattaforma dai Unofficial builds del sito ufficiale di Node.js. Ad esempio il compilato della versione nodejs.14.17.1 per armv6 si trova qui Quindi scaricare il binario tramite il seguente comando sh wget https://unofficial-builds.nodejs.org/download/release/v14.17.1/node-v14.17.1-linux-armv6l.tar.xz 2. scompattare l'archivio binario appena scaricato all'interno della cartella nella quale si intende installare Node.js, ad esempio in /usr/local/lib/nodejs ```sh sudo mkdir -p /usr/local/lib/nodejs sudo tar -xJvf node-v14.17.1-linux-armv6l.tar.xz -C /usr/local/lib/nodejs ``` aggiungere il percorso alla variabile d'ambiente PATH. Editale il file ~/.profile ed aggiungere: alternativamente \u00e8 possibile utilizzare il metodo spiegato al punto successivo sh export PATH=/usr/local/lib/nodejs/node-v14.17.1.linux-armv6l/bin:$PATH riavvia il profilo sh . ~/.profile creare i link simbolici metodo alternativo rispetto al punto precedente NOTA : alternativamente al questo metodo \u00e8 possibile creare dei link simbolici agli applicativi node, npm e npx direttamente all'interno di /usr/bin. In questo modo tutti gli utenti possono avere accesso a Node.js ```sh sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/node /usr/bin/node sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/npm /usr/bin/npm sudo ln -s /usr/local/lib/nodejs/node-v14.17.1-linux-armv6l/bin/npx /usr/bin/npx ``` test del corretto funzionamento di node, npm e npx ```sh node -v npm version npx -v ``` Per ora \u00e8 tutto alv67","title":"Istallazione di Node.js su Raspberry PI Zero (armv6l)"},{"location":"m5stack/","text":"M5Stack Core last edited on 2022-05-01 M5Stack ( https://m5stack.com ) progetta e produce kit di sviluppo open-source, incluso hardware, piattaforma di programmazione e soluzioni IoT. In particolare questo documento si riferisce all'utilizzo della piattaforma M5Stack Core, che consiste in una famiglia di controllori basati su microcontrollori ESP32 e caratterizzata dalla costruzione modulare \"stackabile\". Le istruzioni che seguono sono testate personalmente sul modello M5Stack Core FIRE . Arduino IDE environment (su MacBook Pro M1 Pro) Ovviamente se riporto questi appunti significa che la guida ufficiale necessita di alcune personalizzazioni affinch\u00e8 si riesca a far funzionare il tutto. Partiamo dalla guida ufficiale: Arduino IDE environment - M5Core , e seguimo i seguenti passaggi: Istallazione del driver USB, selezionando CP210x_VCP_MacOS , l'altro driver nel mio caso non \u00e8 stato necessario Scaricare l'IDE Arduino: pur volendo utilizzare la nuova versione 2.0 \u00e8 necessario installare anche la versione precedente in quanto solo su questa sembra funzionare l'installazione dei dispositivi e delle librerie necessarie. Quindi scaricare sia la versione Arduino IDE 1.8.x che la versione Arduino IDE 2.0 RC dal sito ufficiale . Installare entrambe le versioni di Arduino IDE , io personalmente le ho installate nella cartella ~/Applications dell'utente e non nella cartella globale. Eseguire la versione 1.8.x e, seguendo le istruzioni copiare tra gli URL per la gestione di schede addizionali : txt https://m5stack.oss-cn-shenzhen.aliyuncs.com/resource/arduino/package_m5stack_index.json E' ora possibile installare le schede M5Stack nella configurazione del Gestore schede Installazione delle librerie Attenzione Installando le librerie nella guida ufficiale si richiede di installare tutte le librerie dipendenti, ma purtroppo buona parte di esse sembrano avere problemi di installazione, almeno sul mio MacBook Pro M1 Pro Da Gestione librerie installare le seguenti librerie (versioni installate al momento della scrittura della presente guida): M5Stack (0.4.0) M5GFX (0.0.20) Preparare sketch di test : ```c #include / After M5Core is started or reset the program in the setUp () function will be run, and this part will only be run once. After M5Core is started or reset, it will start to execute the program in the setup() function, and this part will only be executed once. / void setup(){ M5.begin(); //Init M5Core. Initialize M5Core M5.Power.begin(); //Init Power module. Initialize the power module / Power chip connected to gpio21, gpio22, I2C device Set battery charging voltage and current If used battery, please call this function in your project / M5.Lcd.print(\"Hello World\"); // Print text on the screen (string) Print text on the screen (string) } / After the program in setup() runs, it runs the program in loop() The loop() function is an infinite loop in which the program runs repeatedly After the program in the setup() function is executed, the program in the loop() function will be executed The loop() function is an endless loop, in which the program will continue to run repeatedly / void loop() { } ``` Programmare il dispositivo, usando Arduino IDE 2.0.0 : collegare la scheda alla porta USB selezionare la scheda : M5Stack-FIRE selezionare la porta di comunicazione : /dev/cu.usbserial-02161434 (o similare) selezionare la voce di men\u00f9 Sketch/Carica Errore di compilazione su Arduino IDE 1.8.x In fase di compilazione la IDE cerca di utilizzare il comando python per eseguire la compilazione, ma purtroppo questo comando non \u00e8 pi\u00f9 presente in MacOS, occorre utilizzare il comando python3 . Una possibile soluzione \u00e8 quella di creare un link di python3 come python : sudo ln -s -f /usr/bin/python3 /usr/local/bin/python e lanciare poi l'IDE da linea di comando: ./Applications/Arduino.app/Contents/MacOS/Arduino","title":"M5Stack Core"},{"location":"m5stack/#m5stack-core","text":"last edited on 2022-05-01 M5Stack ( https://m5stack.com ) progetta e produce kit di sviluppo open-source, incluso hardware, piattaforma di programmazione e soluzioni IoT. In particolare questo documento si riferisce all'utilizzo della piattaforma M5Stack Core, che consiste in una famiglia di controllori basati su microcontrollori ESP32 e caratterizzata dalla costruzione modulare \"stackabile\". Le istruzioni che seguono sono testate personalmente sul modello M5Stack Core FIRE .","title":"M5Stack Core"},{"location":"m5stack/#arduino-ide-environment-su-macbook-pro-m1-pro","text":"Ovviamente se riporto questi appunti significa che la guida ufficiale necessita di alcune personalizzazioni affinch\u00e8 si riesca a far funzionare il tutto. Partiamo dalla guida ufficiale: Arduino IDE environment - M5Core , e seguimo i seguenti passaggi: Istallazione del driver USB, selezionando CP210x_VCP_MacOS , l'altro driver nel mio caso non \u00e8 stato necessario Scaricare l'IDE Arduino: pur volendo utilizzare la nuova versione 2.0 \u00e8 necessario installare anche la versione precedente in quanto solo su questa sembra funzionare l'installazione dei dispositivi e delle librerie necessarie. Quindi scaricare sia la versione Arduino IDE 1.8.x che la versione Arduino IDE 2.0 RC dal sito ufficiale . Installare entrambe le versioni di Arduino IDE , io personalmente le ho installate nella cartella ~/Applications dell'utente e non nella cartella globale. Eseguire la versione 1.8.x e, seguendo le istruzioni copiare tra gli URL per la gestione di schede addizionali : txt https://m5stack.oss-cn-shenzhen.aliyuncs.com/resource/arduino/package_m5stack_index.json E' ora possibile installare le schede M5Stack nella configurazione del Gestore schede Installazione delle librerie Attenzione Installando le librerie nella guida ufficiale si richiede di installare tutte le librerie dipendenti, ma purtroppo buona parte di esse sembrano avere problemi di installazione, almeno sul mio MacBook Pro M1 Pro Da Gestione librerie installare le seguenti librerie (versioni installate al momento della scrittura della presente guida): M5Stack (0.4.0) M5GFX (0.0.20) Preparare sketch di test : ```c #include / After M5Core is started or reset the program in the setUp () function will be run, and this part will only be run once. After M5Core is started or reset, it will start to execute the program in the setup() function, and this part will only be executed once. / void setup(){ M5.begin(); //Init M5Core. Initialize M5Core M5.Power.begin(); //Init Power module. Initialize the power module / Power chip connected to gpio21, gpio22, I2C device Set battery charging voltage and current If used battery, please call this function in your project / M5.Lcd.print(\"Hello World\"); // Print text on the screen (string) Print text on the screen (string) } / After the program in setup() runs, it runs the program in loop() The loop() function is an infinite loop in which the program runs repeatedly After the program in the setup() function is executed, the program in the loop() function will be executed The loop() function is an endless loop, in which the program will continue to run repeatedly / void loop() { } ``` Programmare il dispositivo, usando Arduino IDE 2.0.0 : collegare la scheda alla porta USB selezionare la scheda : M5Stack-FIRE selezionare la porta di comunicazione : /dev/cu.usbserial-02161434 (o similare) selezionare la voce di men\u00f9 Sketch/Carica Errore di compilazione su Arduino IDE 1.8.x In fase di compilazione la IDE cerca di utilizzare il comando python per eseguire la compilazione, ma purtroppo questo comando non \u00e8 pi\u00f9 presente in MacOS, occorre utilizzare il comando python3 . Una possibile soluzione \u00e8 quella di creare un link di python3 come python : sudo ln -s -f /usr/bin/python3 /usr/local/bin/python e lanciare poi l'IDE da linea di comando: ./Applications/Arduino.app/Contents/MacOS/Arduino","title":"Arduino IDE environment (su MacBook Pro M1 Pro)"}]}